#!/bin/bash
#
#Soham Hajariwala
#
#This program will provide the user with the rankings of names in a certain year



#Displays how to use the program by showing the usage format
usage()
{
    echo "bn <year> <assigned gender: f|F|m|M|b|B>" >&2

    if [[ ! $# -eq 0 ]]
    then
        exit $1
    fi
}

help()
{

    echo "bn v1.0.1"
    echo ""
    echo "Overview:"
    echo "This utility will provide the rankings of names within a given year"
    echo ""
    echo "Usage:" 
    usage
    echo ""
    echo "Arguments:"
    echo ""
    echo "<year> - The year which the rankings will be given"
    echo ""
    echo "<assigned gender> - The gender for the names"
    echo ""
    echo "f/F - Females"
    echo ""
    echo "m/M - Males"
    echo ""
    echo "b/B - Both females and males"


    if [[ $1 == "--help" ]]
    then
        help

    #the requested year has no data
    elif [[ $1 -lt 1880 || $1 -gt 2022 ]]
    then
        echo "No data for the year $1" >&2
        exit 4

    #invalid number of arguments
    elif [[ $# != 2 ]]
    then
        usage 1
    fi
}

#Extracts name data and total name count

male_data=$(grep -E -i "^[a-z]+,[M],[1-9][0-9]*" "./us_baby_names/yob$1.txt")

female_data=$(grep -E -i "^[a-z]+,[F],[1-9][0-9]*" "./us_baby_names/yob$1.txt")

male_name_total=$(grep -i -E "^[a-z]+,[M],[1-9][0-9]*" "./us_baby_names/yob$1.txt" | wc -l | xargs)

female_name_total=$(grep -i -E "^[a-z]+,[F],[1-9][0-9]*" "./us_baby_names/yob$1.txt" | wc -l | xargs)


#uses the name data to determine rank of each name
rank()
{

#initializes variables
total=0
gender=""
data=""
rank=1
found="False"

if [[ $2 == "M" || $2 == "m" ]]
then

    gender="male"
    total=$((male_name_total))
    data=$male_data

elif [[ $2 == "F" || $2 == "f" ]]  
then

    gender="female"
    total=$(female_name_total)
    data=$female_data

fi

while read line
do

    if echo "$line" | grep -i -E "^$1,[$2],[1-9][0-9]*" > /dev/null
    then

        found="True"
        echo "$3: $1 ranked $rank out of $total $gender names."
        break

    else
         rank=$((rank + 1))
    fi    

    done <<< "$data"

    if [[ $found == "False" ]]
    then

        echo "$3: $1 not found in $gender names"

    fi
}

#Read inputed names from each line
while read names
do

    #Checks if all names are valid
    for name in $names
    do

        #Invalid name
        if [[ ! $name =~ ^[A-Za-z]+$ ]]
        then

            #Error message
            echo "$name is a badly formatted name" >&2
            exit 3

        fi
    done

    #Searches for names in data
    for name in $names
    do

        if [[ $2 == "M" || $2 == "m" ]]
        then
            rank $name "M" $1 

        elif [[ $2 == "F" || $2 == "f" ]]
        then
            rank $name "F" $1

        elif [[ $2 == "B" || $2 == "b" ]]
        then
            rank $name "M" $1
            rank $name "F" $1

        fi

    done
done
